{"version":3,"sources":["components/LoadingConsumer/Context.jsx","components/LoadingProvider/LoadingProvider.jsx"],"names":["AppContext","React","createContext","Loading","state","data","isLoading","axios","get","response","this","setState","hits","error","children","props","console","log","Provider","value","Component"],"mappings":"qHAAA,kBAEMA,EAFN,OAEmBC,EAAMC,gBAEVF,a,4ICCTG,E,4MACJC,MAAQ,CAAEC,KAAM,KAAMC,WAAW,G,2MAINC,IAAMC,IAC3B,oD,OADIC,E,OAGNC,KAAKC,SAAS,CAAEN,KAAMI,EAASJ,KAAKO,KAAMN,WAAW,I,gDAErDI,KAAKC,SAAS,CAAEE,MAAM,EAAD,K,8IAIf,IAEGC,EAEPJ,KAFFK,MAASD,SAFJ,EAIHJ,KADFN,MAASC,EAHJ,EAGIA,KAGX,OANO,EAGUC,UAIR,mFAGTU,QAAQC,IAAIH,GAEL,kBAAC,UAAQI,SAAT,CAAkBC,MAAO,CAAEd,SAASS,Q,GA1BzBM,aA8BPjB","file":"static/js/components-LoadingProvider-LoadingProvider.0c70ff9c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst AppContext = React.createContext();\n\nexport default AppContext;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Context from \"../LoadingConsumer/Context\";\n\nclass Loading extends Component {\n  state = { data: null, isLoading: true };\n\n  async componentDidMount() {\n    try {\n      const response = await axios.get(\n        \"https://hn.algolia.com/api/v1/search?query=react\"\n      );\n      this.setState({ data: response.data.hits, isLoading: false });\n    } catch (err) {\n      this.setState({ error: err });\n    }\n  }\n\n  render() {\n    const {\n      props: { children },\n      state: { data, isLoading },\n    } = this;\n\n    if (isLoading) {\n      return <p>Загрузка...</p>;\n    }\n\n    console.log(children);\n\n    return <Context.Provider value={{ data }}>{children}</Context.Provider>;\n  }\n}\n\nexport default Loading;\n"],"sourceRoot":""}